[{"title":"koa-router schema validation and swagger api doc generation","date":"2025-01-01T00:00:00.000Z","tags":["koa-router","koa","ajv","swagger","openapi"],"summary":"Just define json schema within a koa router, which will automatically create a documentation and input validation using the schema\r","type":"Blog","readingTime":{"text":"7 min read","minutes":6.275,"time":376500,"words":1255},"slug":"koa-router-ajv-swaggergen","path":"blog/koa-router-ajv-swaggergen","filePath":"blog/koa-router-ajv-swaggergen.mdx","toc":[{"value":"Quick start Example","url":"#quick-start-example","depth":1},{"value":"Some more details","url":"#some-more-details","depth":1},{"value":"Reusable schema","url":"#reusable-schema","depth":1},{"value":"Validation","url":"#validation","depth":1},{"value":"Integrating swagger viewer","url":"#integrating-swagger-viewer","depth":1},{"value":"For developers of this library","url":"#for-developers-of-this-library","depth":1},{"value":"Conclusion","url":"#conclusion","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"koa-router schema validation and swagger api doc generation","datePublished":"2025-01-01T00:00:00.000Z","dateModified":"2025-01-01T00:00:00.000Z","description":"Just define json schema within a koa router, which will automatically create a documentation and input validation using the schema\r","image":"/static/images/twitter-card.png","url":"https://samarjitsamanta.com/blog/koa-router-ajv-swaggergen"}},{"title":"Building RASA Ai for entity extraction","date":"2024-11-19T00:00:00.000Z","tags":["Ai","RASA","NER"],"summary":"Building sample NER model with RASA\r","type":"Blog","readingTime":{"text":"1 min read","minutes":0.045,"time":2700,"words":9},"slug":"ai1","path":"blog/ai1","filePath":"blog/ai1.mdx","toc":[],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Building RASA Ai for entity extraction","datePublished":"2024-11-19T00:00:00.000Z","dateModified":"2024-11-19T00:00:00.000Z","description":"Building sample NER model with RASA\r","image":"/static/images/twitter-card.png","url":"https://samarjitsamanta.com/blog/ai1"}},{"title":"Build Shopping Cart promotion engine with boolean expressions","date":"2020-06-06T00:00:00.000Z","tags":["parser-generator","PEG-parser","compiler-design","promotion-engine"],"summary":"Build a promotions evalution engine based on target and qualifiers defined via an expression language.\r","type":"Blog","readingTime":{"text":"4 min read","minutes":3.345,"time":200700,"words":669},"slug":"boolean-expression-promotionengine","path":"blog/boolean-expression-promotionengine","filePath":"blog/boolean-expression-promotionengine.mdx","toc":[],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Build Shopping Cart promotion engine with boolean expressions","datePublished":"2020-06-06T00:00:00.000Z","dateModified":"2020-06-06T00:00:00.000Z","description":"Build a promotions evalution engine based on target and qualifiers defined via an expression language.\r","image":"/static/images/twitter-card.png","url":"https://samarjitsamanta.com/blog/boolean-expression-promotionengine"}},{"title":"Beginners guide to building boolean expression compiler","date":"2019-03-24T00:00:00.000Z","tags":["parser-generator","PEG-parser","compiler-design"],"summary":"Building compiler is a fun, you can start writing a DSL (domain specific language) following this article. Our choice is PEG grammar for this article.\r","type":"Blog","readingTime":{"text":"6 min read","minutes":5.57,"time":334200,"words":1114},"slug":"boolean-expression-evaluator","path":"blog/boolean-expression-evaluator","filePath":"blog/boolean-expression-evaluator.mdx","toc":[{"value":"Lets target these rules","url":"#lets-target-these-rules","depth":2},{"value":"Grammar","url":"#grammar","depth":2},{"value":"Other approaches","url":"#other-approaches","depth":2},{"value":"Simple Predicate","url":"#simple-predicate","depth":2},{"value":"Simple Predicate Output","url":"#simple-predicate-output","depth":2},{"value":"Full Implementation showing all the use cases","url":"#full-implementation-showing-all-the-use-cases","depth":2},{"value":"Conclusion","url":"#conclusion","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Beginners guide to building boolean expression compiler","datePublished":"2019-03-24T00:00:00.000Z","dateModified":"2019-03-24T00:00:00.000Z","description":"Building compiler is a fun, you can start writing a DSL (domain specific language) following this article. Our choice is PEG grammar for this article.\r","image":"/static/images/twitter-card.png","url":"https://samarjitsamanta.com/blog/boolean-expression-evaluator"}},{"title":"Naive react","date":"2019-03-17T00:00:00.000Z","tags":["react","javacript","Simple React","jsx","typescript"],"summary":"With just 98 lines of code we can achieve a jsx rendering + events + render subtrees without any external dependencies.\r","type":"Blog","readingTime":{"text":"7 min read","minutes":6.74,"time":404400,"words":1348},"slug":"naive-react","path":"blog/naive-react","filePath":"blog/naive-react.mdx","toc":[{"value":"Stage 1","url":"#stage-1","depth":1},{"value":"There is no way to rerender onlysubtrees.","url":"#there-is-no-way-to-rerender-onlysubtrees","depth":2},{"value":"There is no way to know which subtree needs to be rerendered.","url":"#there-is-no-way-to-know-which-subtree-needs-to-be-rerendered","depth":2},{"value":"Some stage1 code","url":"#some-stage1-code","depth":1},{"value":"Stage 2","url":"#stage-2","depth":1},{"value":"Conclusion","url":"#conclusion","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Naive react","datePublished":"2019-03-17T00:00:00.000Z","dateModified":"2019-03-17T00:00:00.000Z","description":"With just 98 lines of code we can achieve a jsx rendering + events + render subtrees without any external dependencies.\r","image":"/static/images/twitter-card.png","url":"https://samarjitsamanta.com/blog/naive-react"}},{"title":"React dynamic plugins loading, want to build a plugin store?","date":"2019-01-17T00:00:00.000Z","tags":["plugin-store","react-dynamic-plugin","reactjs"],"summary":"Load reactjs plugins loaded from a remote http server (think react plugin stores)\r","type":"Blog","readingTime":{"text":"3 min read","minutes":2.67,"time":160200,"words":534},"slug":"react-dynamic-pluginloading","path":"blog/react-dynamic-pluginloading","filePath":"blog/react-dynamic-pluginloading.mdx","toc":[],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"React dynamic plugins loading, want to build a plugin store?","datePublished":"2019-01-17T00:00:00.000Z","dateModified":"2019-01-17T00:00:00.000Z","description":"Load reactjs plugins loaded from a remote http server (think react plugin stores)\r","image":"/static/images/twitter-card.png","url":"https://samarjitsamanta.com/blog/react-dynamic-pluginloading"}},{"title":"Naive redux","date":"2018-03-26T00:00:00.000Z","tags":["react","javacript","Simple React","jsx","typescript"],"summary":"Lets build basic redux complete with redux devtools integration from scratch\r","type":"Blog","readingTime":{"text":"7 min read","minutes":6.065,"time":363900,"words":1213},"slug":"naive-redux","path":"blog/naive-redux","filePath":"blog/naive-redux.mdx","toc":[{"value":"Lets build redux from scratch — naive redux","url":"#lets-build-redux-from-scratch--naive-redux","depth":1},{"value":"TL:DR; We will build redux in about 60 lines of code and make it work with redux devtools. Take me straight to code:  https://stackblitz.com/edit/react-ts-redux","url":"#tldr-we-will-build-redux-in-about-60-lines-of-code-and-make-it-work-with-redux-devtools-take-me-straight-to-code--httpsstackblitzcomeditreact-ts-redux","depth":2},{"value":"Let’s visualize","url":"#lets-visualize","depth":1},{"value":"Blueprint","url":"#blueprint","depth":1},{"value":"CreateStore","url":"#createstore","depth":2},{"value":"Dispatch","url":"#dispatch","depth":2},{"value":"Create a reducer and store and subscribe to store:","url":"#create-a-reducer-and-store-and-subscribe-to-store","depth":2},{"value":"Oh wait. What if I can get chrome redux dev tools to work with my naive redux.","url":"#oh-wait-what-if-i-can-get-chrome-redux-dev-tools-to-work-with-my-naive-redux","depth":2},{"value":"Live running code","url":"#live-running-code","depth":1},{"value":"Conclusion","url":"#conclusion","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Naive redux","datePublished":"2018-03-26T00:00:00.000Z","dateModified":"2018-03-26T00:00:00.000Z","description":"Lets build basic redux complete with redux devtools integration from scratch\r","image":"/static/images/twitter-card.png","url":"https://samarjitsamanta.com/blog/naive-redux"}},{"title":"Building a linux capable hardware at home","date":"2017-10-09T00:00:00.000Z","tags":["SBC","SingleBoardComputer","iMX233"],"summary":"Building hand solderable circuit board capable of linux with 64MB RAM\r","type":"Blog","readingTime":{"text":"9 min read","minutes":8.215,"time":492900,"words":1643},"slug":"myImx233","path":"blog/myImx233","filePath":"blog/myImx233.mdx","toc":[{"value":"Let me see if I can build a linux Computer (It works now!)","url":"#let-me-see-if-i-can-build-a-linux-computer-it-works-now","depth":1},{"value":"TODOs (done)","url":"#todos-done","depth":2},{"value":"TODOs (ignored)","url":"#todos-ignored","depth":2},{"value":"Length Tuning","url":"#length-tuning","depth":3},{"value":"Installation steps","url":"#installation-steps","depth":2},{"value":"Drivers for this project.","url":"#drivers-for-this-project","depth":2},{"value":"Progress:","url":"#progress","depth":2},{"value":"Oct 8 It worked! You can start building one today for yourself :)","url":"#oct-8-it-worked-you-can-start-building-one-today-for-yourself-","depth":3},{"value":"Aug 2017","url":"#aug-2017","depth":3},{"value":"July 2017 end first soldered board","url":"#july-2017-end-first-soldered-board","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Building a linux capable hardware at home","datePublished":"2017-10-09T00:00:00.000Z","dateModified":"2017-10-09T00:00:00.000Z","description":"Building hand solderable circuit board capable of linux with 64MB RAM\r","image":"/static/images/twitter-card.png","url":"https://samarjitsamanta.com/blog/myImx233"}},{"title":"Old blogs from blogspot","date":"+020213-06-06T04:00:00.000Z","tags":["blogspot","javascript-frameworks","js-inheritance","struts2","hibernate"],"summary":"A list of old blogspot articles\r","type":"Blog","readingTime":{"text":"1 min read","minutes":0.7,"time":42000,"words":140},"slug":"blogspot-articles","path":"blog/blogspot-articles","filePath":"blog/blogspot-articles.mdx","toc":[],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Old blogs from blogspot","datePublished":"+020213-06-06T04:00:00.000Z","dateModified":"+020213-06-06T04:00:00.000Z","description":"A list of old blogspot articles\r","image":"/static/images/twitter-card.png","url":"https://samarjitsamanta.com/blog/blogspot-articles"}}]