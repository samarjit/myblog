(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[831],{5834:(e,t,i)=>{Promise.resolve().then(i.bind(i,3962))},3962:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>s});var r=i(5155),o=i(2115);let n=JSON.parse('[{"title":"Building RASA Ai for entity extraction","date":"2024-11-19T00:00:00.000Z","tags":["Ai","RASA","NER"],"summary":"Building sample NER model with RASA\\r","body":{"raw":"\\r\\nThis is what I have learnt from *RASA* NLU.\\r\\n","code":"var Component=(()=>{var x=Object.create;var i=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var p=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),R=(t,e)=>{for(var n in e)i(t,n,{get:e[n],enumerable:!0})},a=(t,e,n,s)=>{if(e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let r of d(e))!h.call(t,r)&&r!==n&&i(t,r,{get:()=>e[r],enumerable:!(s=A(e,r))||s.enumerable});return t};var _=(t,e,n)=>(n=t!=null?x(f(t)):{},a(e||!t||!t.__esModule?i(n,\\"default\\",{value:t,enumerable:!0}):n,t)),j=t=>a(i({},\\"__esModule\\",{value:!0}),t);var c=p((y,m)=>{m.exports=_jsx_runtime});var g={};R(g,{default:()=>u,frontmatter:()=>S});var o=_(c()),S={title:\\"Building RASA Ai for entity extraction\\",date:\\"2024-11-19\\",tags:[\\"Ai\\",\\"RASA\\",\\"NER\\"],summary:\\"Building sample NER model with RASA\\"};function l(t){let e={em:\\"em\\",p:\\"p\\",...t.components};return(0,o.jsxs)(e.p,{children:[\\"This is what I have learnt from \\",(0,o.jsx)(e.em,{children:\\"RASA\\"}),\\" NLU.\\"]})}function u(t={}){let{wrapper:e}=t.components||{};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(l,{...t})}):l(t)}return j(g);})();\\n;return Component;"},"_id":"blog/ai1.mdx","_raw":{"sourceFilePath":"blog/ai1.mdx","sourceFileName":"ai1.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/ai1"},"type":"Blog","readingTime":{"text":"1 min read","minutes":0.045,"time":2700,"words":9},"slug":"ai1","path":"blog/ai1","filePath":"blog/ai1.mdx","toc":[],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Building RASA Ai for entity extraction","datePublished":"2024-11-19T00:00:00.000Z","dateModified":"2024-11-19T00:00:00.000Z","description":"Building sample NER model with RASA\\r","image":"/static/images/twitter-card.png","url":"https://samarjitsamanta.com/blog/ai1"}},{"title":"Building a linux capable hardware at home","date":"2017-10-09T00:00:00.000Z","tags":["SBC","SingleBoardComputer","iMX233"],"summary":"Building hand solderable circuit board capable of linux with 64MB RAM\\r","body":{"raw":"\\r\\n# Let me see if I can build a linux Computer (It works now!)\\r\\n\\r\\nI am starting to build a single board computer with freescale microprocessor iMX233 128 LQFP and 64MB DDR2 SDRAM in 66TSOP. This single board computer will be bare bones with lots of GPIO exposed.\\r\\nThere is no special goal for this project. I am just curious to see if it works. In future I might add an LCD. The PCB is two layered only and can be manufactured cheap.\\r\\n\\r\\n## TODOs (done)\\r\\n* Increase pad lengths of LQFP footprint. (done. Hope to mitigate the soldermask between pads issue  |-0.06mm space-|-0.08mm web-|-0.06mm space->|  = 0.2mm) \\r\\n* Perhaps add a jumper on the 2.5v LineReg and separate out VDD_MEM to be able to test the 2.5v is not 0 due to loading. (skipped)\\r\\n* 88 USB_ID SSP1_DETECT ? Should I use this to CD of SD card connector or micro USB ID pin?  In my circuit it is pulled low via LED. Tux,calculator does the same too.\\r\\n* Add option to boot resistors LCD_RS and LCD_00..LCD_05 (done)\\r\\n* 14 LCD_RS ? High for register boot mode. Or low with 47k resistor for OTP boot mode. Olimex is confusing OTP is set MMBR and LCD_RS is high. (done)\\r\\n* Schottkey Diode D1 VDD4P2 direction. Its strange in ref diagram vs 5v wall. VDD4P2 -|>||- VDDBATT. (done Optional. Not populated in running board)\\r\\n* Series resistor 1E for preventing oscillations (done 3 series resistor added, usb, batt, 4p2)\\r\\n/in old circuit Test by removing Diode, and LED_RS to gnd via resistor.\\r\\n* RESET circuit? Make sure not to get into USB recovery mode. add zener 1.0v so that it never reached 3.3v or just remove reset circuit altogether.\\r\\n* Configure to get rid of batteries as per rev-c circuit. Add 1k resistors in DCDC_BATT and BATT and some caps to GND.\\r\\n* Need to convert the SD card connector to a cheaper version available on ebay or alibaba. (done part-ATTEND 112J-TDAR-R01)\\r\\nI got the files from https://forum.kicad.info/t/microsd-component-footprint-help/3095/5 and placed in parts/ folder. \\r\\nIt would be awesome if I can find some 3D model of it. If someone finds it please create an issue. (Yes found)\\r\\n* Make DDR RAM pin pads longer (new)\\r\\n* Make alternate USB plug preferably through hole or longer pads in micro USB. (new)\\r\\n* Make micro-SD pads larger and longer and add a few decoupling capacitors.(new)\\r\\n* Make more rooms for the inductor as most inductors are really big 8mm long plus place for hand soldering.(new)\\r\\n\\r\\n## TODOs (ignored)\\r\\n* POWER off circuit? \\r\\n* Is Micro SD pullups on all pins necessary? SSP1_DETECT used? (done added them in the bottom side. Data3/CS pulled low)\\r\\n* Added 120R between CLK nCLK.\\r\\n\\r\\n### Length Tuning\\r\\n* D0..D7 LDQS LDM - 39.7mm tuning (real 40.2mm)\\r\\n* CLK nCLK - real 32.2/32.6mm\\r\\n* D8..D15 UDQS UDM - 25.5mm tuning (real 26.0mm)\\r\\n* Address: 32.35mm ~ 25mm\\r\\n* CKE- 20.2mm\\r\\n* SD: 24.8mm tuning (real 25.3mm)\\r\\n\\r\\n## Installation steps\\r\\nCloning this repository should work.\\r\\nIt does use opendous\\r\\nconn_fci from https://github.com/cpavlina/kicad-pcblib.git, https://github.com/cpavlina/kicad-schlib.git\\r\\nCopy kicad-pcblib\\\\conn-fci.pretty to  KiCad\\\\share\\\\kicad\\\\modules\\\\conn-fci.pretty\\r\\nAdd kicad-schlib-master\\\\library\\\\conn-fci.lib  to SchematicEditor -> ComponentLibraries\\r\\nAdd opendous to component libraries too.\\r\\n\\r\\n## Drivers for this project.\\r\\n* Until recently I didn\'t know of a decent opensource software for PCB designing or circuit designing which can be used to design complicated circuits involving microprocessor.\\r\\nI recently discovered KiCAD which is opensource pcb designing software and people have done microprocessor design with it eg. OLinuXino. I am trying to learn PCB designing using KiCAD now.\\r\\n* Second driver was Clementine Core project which I saw in circuitmaker website. This schematic looked so simple and pcb was on 2 layer design, which changed my thought process altogether that linux running board designs may be something I can try.\\r\\n* Third driver was LibreCalc which almost proved that KiCAD can be used to design IMX233 based board. I hope to learn from their mistakes, but a newbee like me can uncover a whole lot of new mystries.\\r\\n\\r\\nSo I have put together a mashup of schematic design of IMX233 and 64MB RAM from freescale reference design and other sources. \\r\\n\\r\\n**Freescale microprocessor:**\\r\\n* MCIMX233CAG4C\\r\\n\\r\\n**DDR RAM - I think all these below RAM chips are compatible.**\\r\\n* AS4C32M16MD1-5TCN\\r\\n* HY5DU121622D(L)T(P)-J\\r\\n* MT46V32M16P-5B:J (This is the only one I can source, so I am using this)\\r\\n\\r\\nThis project is a work in progress and there is no gurantee that I will ever be able to complete it :).\\r\\n\\r\\nBut if you want to try building same stuff as I am building. Go ahead and fork it.\\r\\nDownload KiCad. I am using nightly version of it, because it does not require you to export the netlist and import it again in pcb editor. Make the workflow really easy.\\r\\nI can see one bug in KiCAD, which is after modifying the footprint by adding a step file. It looses the saved settings. \\r\\n\\r\\nOnce you have installed KiCAD, open **MyIMX233.pro** file. \\r\\n\\r\\n[MyIMX233.sch](MyIMX233.sch) - Schematic file.\\r\\n\\r\\n[MyIMX233.kicad_pcb](MyIMX233.kicad_pcb) - PCB\\r\\n\\r\\n[ReferenceSch](ReferenceSch) - contains reference materials. I uploaded all of them for providing content incase someone wants to understand the design.\\r\\n\\r\\n\\r\\n## Progress: \\r\\n\\r\\n### Oct 8 It worked! You can start building one today for yourself :)\\r\\nFew soldering quirks are there. USB pads are quite small to solder. Also pad to hold USB in place is also very small and bad for soldering. Even the SD card pads are also small for soldering. These were new footprints so in next version I will make longer pads for these. RAM pads can be made slightly longer for reliable soldering. \\r\\nSoldered board and powered up without SD card. Some error were coming 0x80207002. Boot loader looking for I2C and it is not initialized. Turned out to be soldering of one pin was not proper for LQFP128. Fixed this pin issue then SD card missing related errors were coming. Added SD card with bogus data 0x8020A007 - ERROR_DDI_SD_CONFIG_BLOCK_NOT_FOUND. Added SD card formatted properly but still 0x8020A007. Little bit further digging showed that SD card MBR boot is not enabled by default. We need to burn an OPT bit HW_OCOTP_ROM0::SD_MBR_BOOT to enable booting from SD card. This process is irreversible. Default boot mode is BCB. I read up again librecalc\'s failure blog.  It gave two perl programs to burn the SD card with u-boot in BCB mode. The 2nd perl program didn\'t run as it assumed smaller SD cards only. I edited the perl program to make it find proper boot signatures. Now we can see something HTLC in UART console.\\r\\nThat\'s too less info to debug further. At this point I posted in freescale community. https://community.nxp.com/message/949934. I decided to blow the MBR OTP flag using BitBurner. Then added MBR based uSD card and same u-boot. Now again it shows HTLC. Good news is that MBR booting works. But it fails very soon. Need bootlets which gives more detailed log instead of u-boot. Turned out voltages are fluctuating all 3v3, 4v2, 1v8, 1v. They were fluctuating in a cycle. I burned official Olinuxino image in SD card. That seems to have bootlets so it gave more info. After right after memory `FRAC 0x92926192` it reboots. I heated up all the pins of DDR and iMX233 with soldering iron. It goes 1 more line ahead in log `init_ddr_mt46v32m16_133Mhz` and sometimes `power 0x00820710`. I added a big capacitor in place of battery which goes the log to further and says uSD card general error ending with r14\\\\<0\\\\>HTLLLL... I tried adding a few caps on 3v3. But nothing helped. Then I tried the other jumper of battery mode. Then it started loading kernel. \\r\\n![Bootup logs](readmeimages/bootlog.png)\\r\\n![Final Board](readmeimages/working_proto.jpg)\\r\\n\\r\\n### Aug 2017\\r\\nStarted modifying the schematic to make battery and USB wall power optional using jumpers. Also realized boot selection can be done using resistors. Sent for fabrication of PCB to pcbpower.\\r\\n\\r\\n### July 2017 end first soldered board\\r\\nGood news is most of the components fitted. Also I got some confidence about my KiCAD skills.\\r\\nSome shortcomings were observed, like the pads for soldering were two short for the fine pitched LQFP128 0.4mm pitch and solder mask dams were not created between pads which made it incredibly hard to solder. I will have to customize the LQFP128 footprint to make it suitable for hand soldering. Some 0402 caps were placed very close, I realized the courtyard verification of components is not turned on by default. I had limited success like UART was working USB was working, BitBurner was working and showing all the OPT(One Time Programmable) bits. Some gibberish was coming on UART console. I used solder paste for soldering, so I thought some shorting might be happening. Then I tried to do reflow soldering to make the solder joints liquify once and then quickly cool it using a frying pan. It actually fried my board! I also mistakenly soldered uSD card with power on! Carelessness!\\r\\n![First Proto Soldered](readmeimages/first_proto.jpg)\\r\\n\\r\\n* I also ordered components. I didn\'t realize this would be a pain. element14 is not that accessible for an individual. I ordered mostly from Shelfkey and some from KitsNSpares. I am still tensed if footprints I chose will match the actual components. Second I am very much tensed about soldering 0402 components.\\r\\n* Final version of PCB sent for fab in pcbpower. \\r\\n![Sent to fab](plot_pcb/MyIMX233_1.0-gerber.png)\\r\\n\\r\\n* Added few options to use DCDC. I was not comfortable of grounding DCDC_BATT and BATT pins, so I added a few jumpers. Also added provisions to add battery. \\r\\n\\r\\n* Learnt basic Freecad to build the Step files of DDR SDRAM 66TSOP. Here is the project I created - [MT46V32M16P-5B-Freecad-Step](https://github.com/samarjit/MT46V32M16P-5B-Freecad-Step).\\r\\n\\r\\n* Initial version. DDR RAM child 3D missing and SD card\'s 3D missing.\\r\\n![Initial plot](plot_pcb/MyIMX233_0.1-3D.png)\\r\\n\\r\\n* Learnt Length Matching in Kicad. \\r\\n\\r\\n* Figured out placement of components. I am going with Clementine Core\'s placement which seems very good. \\r\\n![Initial plot](plot_pcb/MyIMX233_0.0-wolength.png)\\r\\n\\r\\n\\r\\n\\r\\n","code":"var Component=(()=>{var p=Object.create;var a=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var w=(n,i)=>()=>(i||n((i={exports:{}}).exports,i),i.exports),b=(n,i)=>{for(var o in i)a(n,o,{get:i[o],enumerable:!0})},l=(n,i,o,t)=>{if(i&&typeof i==\\"object\\"||typeof i==\\"function\\")for(let r of g(i))!f.call(n,r)&&r!==o&&a(n,r,{get:()=>i[r],enumerable:!(t=m(i,r))||t.enumerable});return n};var D=(n,i,o)=>(o=n!=null?p(u(n)):{},l(i||!n||!n.__esModule?a(o,\\"default\\",{value:n,enumerable:!0}):o,n)),v=n=>l(a({},\\"__esModule\\",{value:!0}),n);var s=w((k,d)=>{d.exports=_jsx_runtime});var y={};b(y,{default:()=>h,frontmatter:()=>I});var e=D(s()),I={title:\\"Building a linux capable hardware at home\\",date:\\"2017-10-09\\",tags:[\\"SBC\\",\\"SingleBoardComputer\\",\\"iMX233\\"],summary:\\"Building hand solderable circuit board capable of linux with 64MB RAM\\"};function c(n){let i={a:\\"a\\",code:\\"code\\",h1:\\"h1\\",h2:\\"h2\\",h3:\\"h3\\",img:\\"img\\",li:\\"li\\",p:\\"p\\",path:\\"path\\",span:\\"span\\",strong:\\"strong\\",svg:\\"svg\\",ul:\\"ul\\",...n.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(i.h1,{className:\\"content-header\\",id:\\"let-me-see-if-i-can-build-a-linux-computer-it-works-now\\",children:[(0,e.jsx)(i.a,{href:\\"#let-me-see-if-i-can-build-a-linux-computer-it-works-now\\",\\"aria-hidden\\":\\"true\\",tabIndex:\\"-1\\",children:(0,e.jsx)(e.Fragment,{children:(0,e.jsx)(i.span,{className:\\"content-header-link\\",children:(0,e.jsxs)(i.svg,{className:\\"h-5 linkicon w-5\\",fill:\\"currentColor\\",viewBox:\\"0 0 20 20\\",xmlns:\\"http://www.w3.org/2000/svg\\",children:[(0,e.jsx)(i.path,{d:\\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\\"}),(0,e.jsx)(i.path,{d:\\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\\"})]})})})}),\\"Let me see if I can build a linux Computer (It works now!)\\"]}),(0,e.jsx)(i.p,{children:\\"I am starting to build a single board computer with freescale microprocessor iMX233 128 LQFP and 64MB DDR2 SDRAM in 66TSOP. This single board computer will be bare bones with lots of GPIO exposed. There is no special goal for this project. I am just curious to see if it works. In future I might add an LCD. The PCB is two layered only and can be manufactured cheap.\\"}),(0,e.jsxs)(i.h2,{className:\\"content-header\\",id:\\"todos-done\\",children:[(0,e.jsx)(i.a,{href:\\"#todos-done\\",\\"aria-hidden\\":\\"true\\",tabIndex:\\"-1\\",children:(0,e.jsx)(e.Fragment,{children:(0,e.jsx)(i.span,{className:\\"content-header-link\\",children:(0,e.jsxs)(i.svg,{className:\\"h-5 linkicon w-5\\",fill:\\"currentColor\\",viewBox:\\"0 0 20 20\\",xmlns:\\"http://www.w3.org/2000/svg\\",children:[(0,e.jsx)(i.path,{d:\\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\\"}),(0,e.jsx)(i.path,{d:\\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\\"})]})})})}),\\"TODOs (done)\\"]}),(0,e.jsxs)(i.ul,{children:[(0,e.jsx)(i.li,{children:\\"Increase pad lengths of LQFP footprint. (done. Hope to mitigate the soldermask between pads issue |-0.06mm space-|-0.08mm web-|-0.06mm space->| = 0.2mm)\\"}),(0,e.jsx)(i.li,{children:\\"Perhaps add a jumper on the 2.5v LineReg and separate out VDD_MEM to be able to test the 2.5v is not 0 due to loading. (skipped)\\"}),(0,e.jsx)(i.li,{children:\\"88 USB_ID SSP1_DETECT ? Should I use this to CD of SD card connector or micro USB ID pin? In my circuit it is pulled low via LED. Tux,calculator does the same too.\\"}),(0,e.jsx)(i.li,{children:\\"Add option to boot resistors LCD_RS and LCD_00..LCD_05 (done)\\"}),(0,e.jsx)(i.li,{children:\\"14 LCD_RS ? High for register boot mode. Or low with 47k resistor for OTP boot mode. Olimex is confusing OTP is set MMBR and LCD_RS is high. (done)\\"}),(0,e.jsx)(i.li,{children:\\"Schottkey Diode D1 VDD4P2 direction. Its strange in ref diagram vs 5v wall. VDD4P2 -|>||- VDDBATT. (done Optional. Not populated in running board)\\"}),(0,e.jsx)(i.li,{children:\\"Series resistor 1E for preventing oscillations (done 3 series resistor added, usb, batt, 4p2) /in old circuit Test by removing Diode, and LED_RS to gnd via resistor.\\"}),(0,e.jsx)(i.li,{children:\\"RESET circuit? Make sure not to get into USB recovery mode. add zener 1.0v so that it never reached 3.3v or just remove reset circuit altogether.\\"}),(0,e.jsx)(i.li,{children:\\"Configure to get rid of batteries as per rev-c circuit. Add 1k resistors in DCDC_BATT and BATT and some caps to GND.\\"}),(0,e.jsxs)(i.li,{children:[\\"Need to convert the SD card connector to a cheaper version available on ebay or alibaba. (done part-ATTEND 112J-TDAR-R01) I got the files from \\",(0,e.jsx)(i.a,{href:\\"https://forum.kicad.info/t/microsd-component-footprint-help/3095/5\\",children:\\"https://forum.kicad.info/t/microsd-component-footprint-help/3095/5\\"}),\\" and placed in parts/ folder. It would be awesome if I can find some 3D model of it. If someone finds it please create an issue. (Yes found)\\"]}),(0,e.jsx)(i.li,{children:\\"Make DDR RAM pin pads longer (new)\\"}),(0,e.jsx)(i.li,{children:\\"Make alternate USB plug preferably through hole or longer pads in micro USB. (new)\\"}),(0,e.jsx)(i.li,{children:\\"Make micro-SD pads larger and longer and add a few decoupling capacitors.(new)\\"}),(0,e.jsx)(i.li,{children:\\"Make more rooms for the inductor as most inductors are really big 8mm long plus place for hand soldering.(new)\\"})]}),(0,e.jsxs)(i.h2,{className:\\"content-header\\",id:\\"todos-ignored\\",children:[(0,e.jsx)(i.a,{href:\\"#todos-ignored\\",\\"aria-hidden\\":\\"true\\",tabIndex:\\"-1\\",children:(0,e.jsx)(e.Fragment,{children:(0,e.jsx)(i.span,{className:\\"content-header-link\\",children:(0,e.jsxs)(i.svg,{className:\\"h-5 linkicon w-5\\",fill:\\"currentColor\\",viewBox:\\"0 0 20 20\\",xmlns:\\"http://www.w3.org/2000/svg\\",children:[(0,e.jsx)(i.path,{d:\\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\\"}),(0,e.jsx)(i.path,{d:\\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\\"})]})})})}),\\"TODOs (ignored)\\"]}),(0,e.jsxs)(i.ul,{children:[(0,e.jsx)(i.li,{children:\\"POWER off circuit?\\"}),(0,e.jsx)(i.li,{children:\\"Is Micro SD pullups on all pins necessary? SSP1_DETECT used? (done added them in the bottom side. Data3/CS pulled low)\\"}),(0,e.jsx)(i.li,{children:\\"Added 120R between CLK nCLK.\\"})]}),(0,e.jsxs)(i.h3,{className:\\"content-header\\",id:\\"length-tuning\\",children:[(0,e.jsx)(i.a,{href:\\"#length-tuning\\",\\"aria-hidden\\":\\"true\\",tabIndex:\\"-1\\",children:(0,e.jsx)(e.Fragment,{children:(0,e.jsx)(i.span,{className:\\"content-header-link\\",children:(0,e.jsxs)(i.svg,{className:\\"h-5 linkicon w-5\\",fill:\\"currentColor\\",viewBox:\\"0 0 20 20\\",xmlns:\\"http://www.w3.org/2000/svg\\",children:[(0,e.jsx)(i.path,{d:\\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\\"}),(0,e.jsx)(i.path,{d:\\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\\"})]})})})}),\\"Length Tuning\\"]}),(0,e.jsxs)(i.ul,{children:[(0,e.jsx)(i.li,{children:\\"D0..D7 LDQS LDM - 39.7mm tuning (real 40.2mm)\\"}),(0,e.jsx)(i.li,{children:\\"CLK nCLK - real 32.2/32.6mm\\"}),(0,e.jsx)(i.li,{children:\\"D8..D15 UDQS UDM - 25.5mm tuning (real 26.0mm)\\"}),(0,e.jsx)(i.li,{children:\\"Address: 32.35mm ~ 25mm\\"}),(0,e.jsx)(i.li,{children:\\"CKE- 20.2mm\\"}),(0,e.jsx)(i.li,{children:\\"SD: 24.8mm tuning (real 25.3mm)\\"})]}),(0,e.jsxs)(i.h2,{className:\\"content-header\\",id:\\"installation-steps\\",children:[(0,e.jsx)(i.a,{href:\\"#installation-steps\\",\\"aria-hidden\\":\\"true\\",tabIndex:\\"-1\\",children:(0,e.jsx)(e.Fragment,{children:(0,e.jsx)(i.span,{className:\\"content-header-link\\",children:(0,e.jsxs)(i.svg,{className:\\"h-5 linkicon w-5\\",fill:\\"currentColor\\",viewBox:\\"0 0 20 20\\",xmlns:\\"http://www.w3.org/2000/svg\\",children:[(0,e.jsx)(i.path,{d:\\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\\"}),(0,e.jsx)(i.path,{d:\\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\\"})]})})})}),\\"Installation steps\\"]}),(0,e.jsxs)(i.p,{children:[\\"Cloning this repository should work. It does use opendous conn_fci from \\",(0,e.jsx)(i.a,{href:\\"https://github.com/cpavlina/kicad-pcblib.git\\",children:\\"https://github.com/cpavlina/kicad-pcblib.git\\"}),\\", \\",(0,e.jsx)(i.a,{href:\\"https://github.com/cpavlina/kicad-schlib.git\\",children:\\"https://github.com/cpavlina/kicad-schlib.git\\"}),\\" Copy kicad-pcblib\\\\\\\\conn-fci.pretty to KiCad\\\\\\\\share\\\\\\\\kicad\\\\\\\\modules\\\\\\\\conn-fci.pretty Add kicad-schlib-master\\\\\\\\library\\\\\\\\conn-fci.lib to SchematicEditor -> ComponentLibraries Add opendous to component libraries too.\\"]}),(0,e.jsxs)(i.h2,{className:\\"content-header\\",id:\\"drivers-for-this-project\\",children:[(0,e.jsx)(i.a,{href:\\"#drivers-for-this-project\\",\\"aria-hidden\\":\\"true\\",tabIndex:\\"-1\\",children:(0,e.jsx)(e.Fragment,{children:(0,e.jsx)(i.span,{className:\\"content-header-link\\",children:(0,e.jsxs)(i.svg,{className:\\"h-5 linkicon w-5\\",fill:\\"currentColor\\",viewBox:\\"0 0 20 20\\",xmlns:\\"http://www.w3.org/2000/svg\\",children:[(0,e.jsx)(i.path,{d:\\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\\"}),(0,e.jsx)(i.path,{d:\\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\\"})]})})})}),\\"Drivers for this project.\\"]}),(0,e.jsxs)(i.ul,{children:[(0,e.jsx)(i.li,{children:\\"Until recently I didn\'t know of a decent opensource software for PCB designing or circuit designing which can be used to design complicated circuits involving microprocessor. I recently discovered KiCAD which is opensource pcb designing software and people have done microprocessor design with it eg. OLinuXino. I am trying to learn PCB designing using KiCAD now.\\"}),(0,e.jsx)(i.li,{children:\\"Second driver was Clementine Core project which I saw in circuitmaker website. This schematic looked so simple and pcb was on 2 layer design, which changed my thought process altogether that linux running board designs may be something I can try.\\"}),(0,e.jsx)(i.li,{children:\\"Third driver was LibreCalc which almost proved that KiCAD can be used to design IMX233 based board. I hope to learn from their mistakes, but a newbee like me can uncover a whole lot of new mystries.\\"})]}),(0,e.jsx)(i.p,{children:\\"So I have put together a mashup of schematic design of IMX233 and 64MB RAM from freescale reference design and other sources.\\"}),(0,e.jsx)(i.p,{children:(0,e.jsx)(i.strong,{children:\\"Freescale microprocessor:\\"})}),(0,e.jsx)(i.ul,{children:(0,e.jsx)(i.li,{children:\\"MCIMX233CAG4C\\"})}),(0,e.jsx)(i.p,{children:(0,e.jsx)(i.strong,{children:\\"DDR RAM - I think all these below RAM chips are compatible.\\"})}),(0,e.jsxs)(i.ul,{children:[(0,e.jsx)(i.li,{children:\\"AS4C32M16MD1-5TCN\\"}),(0,e.jsx)(i.li,{children:\\"HY5DU121622D(L)T(P)-J\\"}),(0,e.jsx)(i.li,{children:\\"MT46V32M16P-5B:J (This is the only one I can source, so I am using this)\\"})]}),(0,e.jsx)(i.p,{children:\\"This project is a work in progress and there is no gurantee that I will ever be able to complete it :).\\"}),(0,e.jsx)(i.p,{children:\\"But if you want to try building same stuff as I am building. Go ahead and fork it. Download KiCad. I am using nightly version of it, because it does not require you to export the netlist and import it again in pcb editor. Make the workflow really easy. I can see one bug in KiCAD, which is after modifying the footprint by adding a step file. It looses the saved settings.\\"}),(0,e.jsxs)(i.p,{children:[\\"Once you have installed KiCAD, open \\",(0,e.jsx)(i.strong,{children:\\"MyIMX233.pro\\"}),\\" file.\\"]}),(0,e.jsxs)(i.p,{children:[(0,e.jsx)(i.a,{href:\\"MyIMX233.sch\\",children:\\"MyIMX233.sch\\"}),\\" - Schematic file.\\"]}),(0,e.jsxs)(i.p,{children:[(0,e.jsx)(i.a,{href:\\"MyIMX233.kicad_pcb\\",children:\\"MyIMX233.kicad_pcb\\"}),\\" - PCB\\"]}),(0,e.jsxs)(i.p,{children:[(0,e.jsx)(i.a,{href:\\"ReferenceSch\\",children:\\"ReferenceSch\\"}),\\" - contains reference materials. I uploaded all of them for providing content incase someone wants to understand the design.\\"]}),(0,e.jsxs)(i.h2,{className:\\"content-header\\",id:\\"progress\\",children:[(0,e.jsx)(i.a,{href:\\"#progress\\",\\"aria-hidden\\":\\"true\\",tabIndex:\\"-1\\",children:(0,e.jsx)(e.Fragment,{children:(0,e.jsx)(i.span,{className:\\"content-header-link\\",children:(0,e.jsxs)(i.svg,{className:\\"h-5 linkicon w-5\\",fill:\\"currentColor\\",viewBox:\\"0 0 20 20\\",xmlns:\\"http://www.w3.org/2000/svg\\",children:[(0,e.jsx)(i.path,{d:\\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\\"}),(0,e.jsx)(i.path,{d:\\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\\"})]})})})}),\\"Progress:\\"]}),(0,e.jsxs)(i.h3,{className:\\"content-header\\",id:\\"oct-8-it-worked-you-can-start-building-one-today-for-yourself-\\",children:[(0,e.jsx)(i.a,{href:\\"#oct-8-it-worked-you-can-start-building-one-today-for-yourself-\\",\\"aria-hidden\\":\\"true\\",tabIndex:\\"-1\\",children:(0,e.jsx)(e.Fragment,{children:(0,e.jsx)(i.span,{className:\\"content-header-link\\",children:(0,e.jsxs)(i.svg,{className:\\"h-5 linkicon w-5\\",fill:\\"currentColor\\",viewBox:\\"0 0 20 20\\",xmlns:\\"http://www.w3.org/2000/svg\\",children:[(0,e.jsx)(i.path,{d:\\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\\"}),(0,e.jsx)(i.path,{d:\\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\\"})]})})})}),\\"Oct 8 It worked! You can start building one today for yourself :)\\"]}),(0,e.jsxs)(i.p,{children:[\\"Few soldering quirks are there. USB pads are quite small to solder. Also pad to hold USB in place is also very small and bad for soldering. Even the SD card pads are also small for soldering. These were new footprints so in next version I will make longer pads for these. RAM pads can be made slightly longer for reliable soldering. Soldered board and powered up without SD card. Some error were coming 0x80207002. Boot loader looking for I2C and it is not initialized. Turned out to be soldering of one pin was not proper for LQFP128. Fixed this pin issue then SD card missing related errors were coming. Added SD card with bogus data 0x8020A007 - ERROR_DDI_SD_CONFIG_BLOCK_NOT_FOUND. Added SD card formatted properly but still 0x8020A007. Little bit further digging showed that SD card MBR boot is not enabled by default. We need to burn an OPT bit HW_OCOTP_ROM0::SD_MBR_BOOT to enable booting from SD card. This process is irreversible. Default boot mode is BCB. I read up again librecalc\'s failure blog. It gave two perl programs to burn the SD card with u-boot in BCB mode. The 2nd perl program didn\'t run as it assumed smaller SD cards only. I edited the perl program to make it find proper boot signatures. Now we can see something HTLC in UART console. That\'s too less info to debug further. At this point I posted in freescale community. \\",(0,e.jsx)(i.a,{href:\\"https://community.nxp.com/message/949934\\",children:\\"https://community.nxp.com/message/949934\\"}),\\". I decided to blow the MBR OTP flag using BitBurner. Then added MBR based uSD card and same u-boot. Now again it shows HTLC. Good news is that MBR booting works. But it fails very soon. Need bootlets which gives more detailed log instead of u-boot. Turned out voltages are fluctuating all 3v3, 4v2, 1v8, 1v. They were fluctuating in a cycle. I burned official Olinuxino image in SD card. That seems to have bootlets so it gave more info. After right after memory \\",(0,e.jsx)(i.code,{children:\\"FRAC 0x92926192\\"}),\\" it reboots. I heated up all the pins of DDR and iMX233 with soldering iron. It goes 1 more line ahead in log \\",(0,e.jsx)(i.code,{children:\\"init_ddr_mt46v32m16_133Mhz\\"}),\\" and sometimes \\",(0,e.jsx)(i.code,{children:\\"power 0x00820710\\"}),\\". I added a big capacitor in place of battery which goes the log to further and says uSD card general error ending with r14<0>HTLLLL... I tried adding a few caps on 3v3. But nothing helped. Then I tried the other jumper of battery mode. Then it started loading kernel. \\",(0,e.jsx)(i.img,{alt:\\"Bootup logs\\",src:\\"readmeimages/bootlog.png\\"}),\\" \\",(0,e.jsx)(i.img,{alt:\\"Final Board\\",src:\\"readmeimages/working_proto.jpg\\"})]}),(0,e.jsxs)(i.h3,{className:\\"content-header\\",id:\\"aug-2017\\",children:[(0,e.jsx)(i.a,{href:\\"#aug-2017\\",\\"aria-hidden\\":\\"true\\",tabIndex:\\"-1\\",children:(0,e.jsx)(e.Fragment,{children:(0,e.jsx)(i.span,{className:\\"content-header-link\\",children:(0,e.jsxs)(i.svg,{className:\\"h-5 linkicon w-5\\",fill:\\"currentColor\\",viewBox:\\"0 0 20 20\\",xmlns:\\"http://www.w3.org/2000/svg\\",children:[(0,e.jsx)(i.path,{d:\\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\\"}),(0,e.jsx)(i.path,{d:\\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\\"})]})})})}),\\"Aug 2017\\"]}),(0,e.jsx)(i.p,{children:\\"Started modifying the schematic to make battery and USB wall power optional using jumpers. Also realized boot selection can be done using resistors. Sent for fabrication of PCB to pcbpower.\\"}),(0,e.jsxs)(i.h3,{className:\\"content-header\\",id:\\"july-2017-end-first-soldered-board\\",children:[(0,e.jsx)(i.a,{href:\\"#july-2017-end-first-soldered-board\\",\\"aria-hidden\\":\\"true\\",tabIndex:\\"-1\\",children:(0,e.jsx)(e.Fragment,{children:(0,e.jsx)(i.span,{className:\\"content-header-link\\",children:(0,e.jsxs)(i.svg,{className:\\"h-5 linkicon w-5\\",fill:\\"currentColor\\",viewBox:\\"0 0 20 20\\",xmlns:\\"http://www.w3.org/2000/svg\\",children:[(0,e.jsx)(i.path,{d:\\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\\"}),(0,e.jsx)(i.path,{d:\\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\\"})]})})})}),\\"July 2017 end first soldered board\\"]}),(0,e.jsxs)(i.p,{children:[\\"Good news is most of the components fitted. Also I got some confidence about my KiCAD skills. Some shortcomings were observed, like the pads for soldering were two short for the fine pitched LQFP128 0.4mm pitch and solder mask dams were not created between pads which made it incredibly hard to solder. I will have to customize the LQFP128 footprint to make it suitable for hand soldering. Some 0402 caps were placed very close, I realized the courtyard verification of components is not turned on by default. I had limited success like UART was working USB was working, BitBurner was working and showing all the OPT(One Time Programmable) bits. Some gibberish was coming on UART console. I used solder paste for soldering, so I thought some shorting might be happening. Then I tried to do reflow soldering to make the solder joints liquify once and then quickly cool it using a frying pan. It actually fried my board! I also mistakenly soldered uSD card with power on! Carelessness! \\",(0,e.jsx)(i.img,{alt:\\"First Proto Soldered\\",src:\\"readmeimages/first_proto.jpg\\"})]}),(0,e.jsxs)(i.ul,{children:[(0,e.jsx)(i.li,{children:(0,e.jsx)(i.p,{children:\\"I also ordered components. I didn\'t realize this would be a pain. element14 is not that accessible for an individual. I ordered mostly from Shelfkey and some from KitsNSpares. I am still tensed if footprints I chose will match the actual components. Second I am very much tensed about soldering 0402 components.\\"})}),(0,e.jsx)(i.li,{children:(0,e.jsxs)(i.p,{children:[\\"Final version of PCB sent for fab in pcbpower. \\",(0,e.jsx)(i.img,{alt:\\"Sent to fab\\",src:\\"plot_pcb/MyIMX233_1.0-gerber.png\\"})]})}),(0,e.jsx)(i.li,{children:(0,e.jsx)(i.p,{children:\\"Added few options to use DCDC. I was not comfortable of grounding DCDC_BATT and BATT pins, so I added a few jumpers. Also added provisions to add battery.\\"})}),(0,e.jsx)(i.li,{children:(0,e.jsxs)(i.p,{children:[\\"Learnt basic Freecad to build the Step files of DDR SDRAM 66TSOP. Here is the project I created - \\",(0,e.jsx)(i.a,{href:\\"https://github.com/samarjit/MT46V32M16P-5B-Freecad-Step\\",children:\\"MT46V32M16P-5B-Freecad-Step\\"}),\\".\\"]})}),(0,e.jsx)(i.li,{children:(0,e.jsxs)(i.p,{children:[\\"Initial version. DDR RAM child 3D missing and SD card\'s 3D missing. \\",(0,e.jsx)(i.img,{alt:\\"Initial plot\\",src:\\"plot_pcb/MyIMX233_0.1-3D.png\\"})]})}),(0,e.jsx)(i.li,{children:(0,e.jsx)(i.p,{children:\\"Learnt Length Matching in Kicad.\\"})}),(0,e.jsx)(i.li,{children:(0,e.jsxs)(i.p,{children:[\\"Figured out placement of components. I am going with Clementine Core\'s placement which seems very good. \\",(0,e.jsx)(i.img,{alt:\\"Initial plot\\",src:\\"plot_pcb/MyIMX233_0.0-wolength.png\\"})]})})]})]})}function h(n={}){let{wrapper:i}=n.components||{};return i?(0,e.jsx)(i,{...n,children:(0,e.jsx)(c,{...n})}):c(n)}return v(y);})();\\n;return Component;"},"_id":"blog/myImx233.mdx","_raw":{"sourceFilePath":"blog/myImx233.mdx","sourceFileName":"myImx233.mdx","sourceFileDir":"blog","contentType":"mdx","flattenedPath":"blog/myImx233"},"type":"Blog","readingTime":{"text":"9 min read","minutes":8.215,"time":492900,"words":1643},"slug":"myImx233","path":"blog/myImx233","filePath":"blog/myImx233.mdx","toc":[{"value":"Let me see if I can build a linux Computer (It works now!)","url":"#let-me-see-if-i-can-build-a-linux-computer-it-works-now","depth":1},{"value":"TODOs (done)","url":"#todos-done","depth":2},{"value":"TODOs (ignored)","url":"#todos-ignored","depth":2},{"value":"Length Tuning","url":"#length-tuning","depth":3},{"value":"Installation steps","url":"#installation-steps","depth":2},{"value":"Drivers for this project.","url":"#drivers-for-this-project","depth":2},{"value":"Progress:","url":"#progress","depth":2},{"value":"Oct 8 It worked! You can start building one today for yourself :)","url":"#oct-8-it-worked-you-can-start-building-one-today-for-yourself-","depth":3},{"value":"Aug 2017","url":"#aug-2017","depth":3},{"value":"July 2017 end first soldered board","url":"#july-2017-end-first-soldered-board","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Building a linux capable hardware at home","datePublished":"2017-10-09T00:00:00.000Z","dateModified":"2017-10-09T00:00:00.000Z","description":"Building hand solderable circuit board capable of linux with 64MB RAM\\r","image":"/static/images/twitter-card.png","url":"https://samarjitsamanta.com/blog/myImx233"}}]');[...n,...JSON.parse('[{"name":"Samarjit Samanta","avatar":"/static/images/avatar.png","occupation":"Software Consultatnt","company":"Accenture","email":"samarjit.samanta@gmail.com","twitter":"https://x.com/samarjitsamanta","linkedin":"https://www.linkedin.com/in/samarjit-samanta-a723a811/","github":"https://github.com/samarjit\\r","body":{"raw":"\\r\\nSamarjit Samanta is a wandering soul for all things technology. He likes to\\r\\nexperiment with javascript, java, react, electronics, Ai. Sometimes when he is too stressed up he paints.\\r\\n","code":"var Component=(()=>{var u=Object.create;var i=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,x=Object.prototype.hasOwnProperty;var d=(t,a)=>()=>(a||t((a={exports:{}}).exports,a),a.exports),g=(t,a)=>{for(var n in a)i(t,n,{get:a[n],enumerable:!0})},r=(t,a,n,s)=>{if(a&&typeof a==\\"object\\"||typeof a==\\"function\\")for(let e of j(a))!x.call(t,e)&&e!==n&&i(t,e,{get:()=>a[e],enumerable:!(s=h(a,e))||s.enumerable});return t};var f=(t,a,n)=>(n=t!=null?u(w(t)):{},r(a||!t||!t.__esModule?i(n,\\"default\\",{value:t,enumerable:!0}):n,t)),S=t=>r(i({},\\"__esModule\\",{value:!0}),t);var c=d((y,m)=>{m.exports=_jsx_runtime});var v={};g(v,{default:()=>l,frontmatter:()=>_});var o=f(c()),_={name:\\"Samarjit Samanta\\",avatar:\\"/static/images/avatar.png\\",occupation:\\"Software Consultatnt\\",company:\\"Accenture\\",email:\\"samarjit.samanta@gmail.com\\",twitter:\\"https://x.com/samarjitsamanta\\",linkedin:\\"https://www.linkedin.com/in/samarjit-samanta-a723a811/\\",github:\\"https://github.com/samarjit\\"};function p(t){let a={p:\\"p\\",...t.components};return(0,o.jsx)(a.p,{children:\\"Samarjit Samanta is a wandering soul for all things technology. He likes to experiment with javascript, java, react, electronics, Ai. Sometimes when he is too stressed up he paints.\\"})}function l(t={}){let{wrapper:a}=t.components||{};return a?(0,o.jsx)(a,{...t,children:(0,o.jsx)(p,{...t})}):p(t)}return S(v);})();\\n;return Component;"},"_id":"authors/default.mdx","_raw":{"sourceFilePath":"authors/default.mdx","sourceFileName":"default.mdx","sourceFileDir":"authors","contentType":"mdx","flattenedPath":"authors/default"},"type":"Authors","readingTime":{"text":"1 min read","minutes":0.145,"time":8700,"words":29},"slug":"default","path":"authors/default","filePath":"authors/default.mdx","toc":[]}]'),...JSON.parse('[{"title":"Old drawing - Daydreaming!","date":"2007-03-11T05:00:00.000Z","body":{"raw":"\\r\\n![MyDrawing](/mydrawing1.jpg)","code":"var Component=(()=>{var g=Object.create;var i=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,l=Object.prototype.hasOwnProperty;var w=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),h=(t,e)=>{for(var n in e)i(t,n,{get:e[n],enumerable:!0})},c=(t,e,n,d)=>{if(e&&typeof e==\\"object\\"||typeof e==\\"function\\")for(let o of p(e))!l.call(t,o)&&o!==n&&i(t,o,{get:()=>e[o],enumerable:!(d=u(e,o))||d.enumerable});return t};var y=(t,e,n)=>(n=t!=null?g(x(t)):{},c(e||!t||!t.__esModule?i(n,\\"default\\",{value:t,enumerable:!0}):n,t)),_=t=>c(i({},\\"__esModule\\",{value:!0}),t);var m=w((b,a)=>{a.exports=_jsx_runtime});var v={};h(v,{default:()=>f,frontmatter:()=>j});var r=y(m()),j={title:\\"Old drawing - Daydreaming!\\",date:\\"2007-03-11\\"};function s(t){let e={div:\\"div\\",...t.components},{Image:n}=e;return n||M(\\"Image\\",!0),(0,r.jsx)(e.div,{children:(0,r.jsx)(n,{alt:\\"MyDrawing\\",src:\\"/mydrawing1.jpg\\",width:\\"1200\\",height:\\"1600\\"})})}function f(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(s,{...t})}):s(t)}function M(t,e){throw new Error(\\"Expected \\"+(e?\\"component\\":\\"object\\")+\\" `\\"+t+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}return _(v);})();\\n;return Component;"},"_id":"posts/firstpage.mdx","_raw":{"sourceFilePath":"posts/firstpage.mdx","sourceFileName":"firstpage.mdx","sourceFileDir":"posts","contentType":"mdx","flattenedPath":"posts/firstpage"},"type":"Post","url":"/posts/posts/firstpage"}]')];var a=i(2333);function s(){let[e,t]=(0,o.useState)(),i=n.sort((e,t)=>new Date(t.date)-new Date(e.date)),s=n.slice(0,5),l={currentPage:1,totalPages:Math.ceil(i.length/5)};async function d(){t(await fetch("https://jsonplaceholder.typicode.com/posts/1").then(e=>e.json()).catch(e=>console.error(e)))}return(0,r.jsxs)("div",{children:[(0,r.jsx)("h1",{children:"Blog Page"}),(0,r.jsx)("button",{onClick:()=>d(),children:"Call API"}),e&&(0,r.jsx)("pre",{children:JSON.stringify(e,null,2)}),(0,r.jsx)(a.default,{posts:i,initialDisplayPosts:s,pagination:l,title:"All Posts"})]})}}},e=>{var t=t=>e(e.s=t);e.O(0,[173,333,441,517,358],()=>t(5834)),_N_E=e.O()}]);